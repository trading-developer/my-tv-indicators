// This Pine Script® code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © AlexKo
//@version=5
indicator("Chaikin Combo [AlexKo] — final", overlay=false, max_labels_count=500, max_lines_count=500)

// ==== Inputs ====
showADL   = input.bool(true,  "Показывать A/D Line")
adlSmooth = input.int(0,      "EMA сглаживания A/D (0 = выкл)", minval=0)
showOsc   = input.bool(true,  "Показывать Chaikin Oscillator")
fastLen   = input.int(3,      "Chaikin EMA fast", minval=1)
slowLen   = input.int(10,     "Chaikin EMA slow", minval=2)
showCMF   = input.bool(true,  "Показывать CMF")
cmfLen    = input.int(20,     "Длина CMF", minval=1)

showDiv   = input.bool(true,  "Показывать дивергенции")
divBase   = input.string("ADL", "База дивергенций", options=["ADL","Oscillator"])
divLB     = input.int(30,     "Плечо дивергенций (бары)", minval=5)

makeAlerts= input.bool(true,  "Включить алерты (созданы ниже)")

colADL    = input.color(color.aqua, "Цвет A/D")
colOscUp  = input.color(color.teal, "Oscillator > 0")
colOscDn  = input.color(color.red,  "Oscillator < 0")
colCMFUp  = input.color(color.new(color.teal, 0), "CMF > 0")
colCMFDn  = input.color(color.new(color.red,  0), "CMF < 0")

// ==== Helper sum (без ta.sum) ====
f_sum(src, len) =>
    float acc = 0.0
    for i = 0 to len - 1
        acc += nz(src[i])
    acc

// ==== Chaikin core ====
rng  = math.max(high - low, 1e-10)
clv  = ((close - low) - (high - close)) / rng
mf   = clv * volume

adlRaw = ta.cum(mf)
adl    = adlSmooth > 0 ? ta.ema(adlRaw, adlSmooth) : adlRaw

chFast = ta.ema(adl, fastLen)
chSlow = ta.ema(adl, slowLen)
osc    = chFast - chSlow

sumMF  = f_sum(mf, cmfLen)
sumVol = f_sum(volume, cmfLen)
cmf    = sumVol == 0 ? 0.0 : (sumMF / sumVol)

// ==== Plots (глобально, скрываем через na) ====
plot(showADL ? adl : na, title="A/D Line", color=colADL, linewidth=2)
plot(showOsc ? osc : na, title="Chaikin Osc", color=osc >= 0 ? colOscUp : colOscDn, linewidth=2)
hline(0, "Zero (Osc/CMF)", color=color.gray)
plot(showCMF ? cmf : na, title="CMF", style=plot.style_columns, color=cmf >= 0 ? colCMFUp : colCMFDn)

// ==== Дивергенции ====
ind     = divBase == "ADL" ? adl : osc
hhPrice = high > ta.highest(high[1], divLB)
llPrice = low  < ta.lowest(low[1],  divLB)
hhInd   = ind  > ta.highest(ind[1], divLB)
llInd   = ind  < ta.lowest(ind[1],  divLB)

bearDiv = showDiv and hhPrice and not hhInd
bullDiv = showDiv and llPrice and not llInd

if bullDiv
label.new(bar_index, low, "Bull Div\n(" + divBase + ")", style=label.style_label_up, textcolor=color.white, color=color.teal, size=size.tiny)
if bearDiv
label.new(bar_index, high, "Bear Div\n(" + divBase + ")", style=label.style_label_down, textcolor=color.white, color=color.red, size=size.tiny)

// ==== Alerts (ТОЛЬКО глобальная область; строки — константы) ====
// Включение через makeAlerts добавляем в условие (1-й аргумент)
alertcondition(makeAlerts and bullDiv and divBase == "ADL",        "Bullish divergence ADL",        "Bullish divergence (ADL) on {{ticker}} {{interval}}")
alertcondition(makeAlerts and bearDiv and divBase == "ADL",        "Bearish divergence ADL",        "Bearish divergence (ADL) on {{ticker}} {{interval}}")
alertcondition(makeAlerts and bullDiv and divBase == "Oscillator", "Bullish divergence Oscillator", "Bullish divergence (Oscillator) on {{ticker}} {{interval}}")
alertcondition(makeAlerts and bearDiv and divBase == "Oscillator", "Bearish divergence Oscillator", "Bearish divergence (Oscillator) on {{ticker}} {{interval}}")

alertcondition(makeAlerts and ta.crossover(osc, 0),  "Chaikin Osc ↑ crosses 0", "Chaikin Oscillator crossed ABOVE 0 on {{ticker}} {{interval}}")
alertcondition(makeAlerts and ta.crossunder(osc, 0), "Chaikin Osc ↓ crosses 0", "Chaikin Oscillator crossed BELOW 0 on {{ticker}} {{interval}}")
alertcondition(makeAlerts and ta.crossover(cmf, 0),  "CMF crosses ↑ 0", "CMF crossed ABOVE 0 on {{ticker}} {{interval}}")
alertcondition(makeAlerts and ta.crossunder(cmf, 0), "CMF crosses ↓ 0", "CMF crossed BELOW 0 on {{ticker}} {{interval}}")
