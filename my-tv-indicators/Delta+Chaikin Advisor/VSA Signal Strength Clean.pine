// This Pine Script® code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © AlexKo
//@version=5
indicator("Delta+Chaikin Advisor [AlexKo] — Breakout Filter", overlay = true, max_labels_count = 500, max_lines_count = 500)

// ===== Inputs =====
lenDelta = input.int(50, "Окно нормализации Δ", minval = 5)
useRMS = input.bool(true, "Нормализация через RMS (иначе SMA|Δ|)")
anomMul = input.float(2.0, "Порог аномалии Δ (× норм.)", step = 0.1)
lenRng = input.int(20, "SMA диапазона (Effort/Result)")
atrLen = input.int(14, "ATR для SL/зон")
tpR = input.float(1.0, "TP в R", step = 0.25)
slBufATR = input.float(0.1, "Буфер SL (в ATR)", step = 0.05)
showLabels = input.bool(true, "Показывать метки")
showTable = input.bool(true, "Показывать мини‑панель")
// Chaikin
emaFast = input.int(3, "Chaikin EMA fast")
emaSlow = input.int(10, "Chaikin EMA slow")
divLookback = input.int(30, "Плечо дивергенций (бары)")
// Breakout‑фильтр
lbBreak = input.int(20, "Левел для пробоя (бары)")
useClose = input.bool(true, "Пробой по close (false — по хай/лоу)")
combineWithAdvisor = input.bool(true, "Требовать ещё и сигнал советника (Δ/Trap/Div)")

cLong = input.color(color.teal, "Цвет Long")
cShort = input.color(color.red, "Цвет Short")

// ===== Delta proxy (CLV×Vol) =====
rng = math.max(high - low, 1e-10)
clv = ((close - low) - (high - close)) / rng
delta = clv * volume

f_rms(src, len) =>
    float sumSq = 0.0
    for i = 0 to len - 1
        sumSq += src[i] * src[i]
    math.sqrt(sumSq / len)

normBase = useRMS ? f_rms(delta, lenDelta) : ta.sma(math.abs(delta), lenDelta)
ratio = normBase == 0 ? 0 : delta / normBase
isBullAnom = ratio >= anomMul
isBearAnom = ratio <= - anomMul

rngSma = ta.sma(rng, lenRng)
atr = ta.atr(atrLen)
effortBig = math.abs(delta) > normBase * anomMul
resultSmall = rng < rngSma * 0.8
bullTrap = effortBig and resultSmall and delta > 0 and close <= open
bearTrap    = effortBig and resultSmall and delta < 0 and close >= open

// ===== Chaikin: A/D и осциллятор =====
adl = ta.cum(delta)
chFast = ta.ema(adl, emaFast)
chSlow = ta.ema(adl, emaSlow)
chOsc = chFast - chSlow

// Дивергенции (информативно)
hhPrice = high > ta.highest(high[1], divLookback)
llPrice = low < ta.lowest(low[1], divLookback)
hhCh = chOsc > ta.highest(chOsc[1], divLookback)
llCh = chOsc < ta.lowest(chOsc[1], divLookback)
bearDiv = hhPrice and not hhCh
bullDiv = llPrice and not llCh

// Базовые сигналы советника (из прошлой версии)
longSigCore = isBullAnom or bullTrap
shortSigCore = isBearAnom or bearTrap
longAdvisor = longSigCore or bullDiv
shortAdvisor = shortSigCore or bearDiv

// ===== Новые фильтры входа: пробой + поток =====
// 1) Пробой уровня
brkLong = (useClose ? close > ta.highest(close[1], lbBreak) : high > ta.highest(high[1], lbBreak))
brkShort = (useClose ? close < ta.lowest(close[1], lbBreak) : low < ta.lowest(low[1], lbBreak))

// 2) Chaikin растёт/падает (моментум денежного потока)
flowUp = chOsc > chOsc[1]
flowDown = chOsc < chOsc[1]

// 3) Кумулятивная дельта обновляет экстремум
adlHH = adl > ta.highest(adl[1], lbBreak)
adlLL = adl < ta.lowest(adl[1],  lbBreak)

// Итоговые условия входа
entryLongRaw = brkLong and flowUp   and adlHH
entryShortRaw = brkShort and flowDown and adlLL

entryLong = combineWithAdvisor ? (entryLongRaw and longAdvisor) : entryLongRaw
entryShort = combineWithAdvisor ? (entryShortRaw and shortAdvisor) : entryShortRaw

// ===== Метки =====
f_lbl_up(txt) => label.new(bar_index, low, txt, style = label.style_label_up, color = cLong, textcolor = color.white, size = size.tiny)
f_lbl_dn(txt) => label.new(bar_index, high, txt, style = label.style_label_down, color= cShort, textcolor = color.white, size= size.tiny)

if showLabels
    if isBullAnom
        f_lbl_up("Δ +" + str.tostring(ratio, "#.##") + "×")
    if isBearAnom
        f_lbl_dn("Δ " + str.tostring(ratio, "#.##") + "×")
    if bullTrap
        f_lbl_up("Trap E↑/R↓")
    if bearTrap
        f_lbl_dn("Trap E↑/R↓")
    if bullDiv
        f_lbl_up("Bull Div (Chaikin)")
    if bearDiv
        f_lbl_dn("Bear Div (Chaikin)")
    if entryLong
        f_lbl_up("ENTRY LONG\nBreakout+Flow+ADL")
    if entryShort
        f_lbl_dn("ENTRY SHORT\nBreakout+Flow+ADL")

// ===== Советник: SL/TP от бара входа =====
longSL = entryLong ? (low - slBufATR * atr) : na
longTP = entryLong ? (close + tpR* (close - longSL)) : na
shortSL = entryShort ? (high + slBufATR * atr) : na
shortTP = entryShort ? (close - tpR * (shortSL - close)) : na

plot(longSL, "Long SL", color= cLong, style = plot.style_circles, linewidth= 2)
plot(longTP, "Long TP",  color = cLong, style = plot.style_cross,   linewidth = 2)
plot(shortSL, "Short SL", color = cShort, style = plot.style_circles, linewidth = 2)
plot(shortTP, "Short TP", color = cShort, style = plot.style_cross, linewidth = 2)

// ===== Alerts =====
alertcondition(entryLong, "ENTRY LONG (Breakout+Flow+ADL)", "ENTRY LONG on {{ticker}} {{interval}} (Breakout+Chaikin up+ADL HH)")
alertcondition(entryShort, "ENTRY SHORT (Breakout+Flow+ADL)", "ENTRY SHORT on {{ticker}} {{interval}} (Breakdown+Chaikin down+ADL LL)")

// ===== Mini‑panel =====
if showTable
    var t = table.new(position.top_right, 1, 7, border_width = 1)
    if barstate.islast
        table.cell(t, 0, 0, "Δ x: " + str.tostring(ratio, "#.##"), text_color =color.white, bgcolor = color.new(color.gray, 0))
        table.cell(t, 0, 1, "Norm: " + (useRMS ? "RMS" : "SMA|Δ|"))
        table.cell(t, 0, 2, "Chaikin: " + str.tostring(chOsc, "#.##"))
        table.cell(t, 0, 3, "Break L/S: " + (brkLong ? "L" : brkShort ? "S" : "-"))
        table.cell(t, 0, 4, "Flow: " + (flowUp ? "↑" : flowDown ? "↓" : "·"))
        table.cell(t, 0, 5, "ADL HH/LL: " + (adlHH ? "HH" : adlLL ? "LL" : "·"))
        table.cell(t, 0, 6, "Entry: " + (entryLong ? "LONG" : entryShort ? "SHORT" : "-"))
